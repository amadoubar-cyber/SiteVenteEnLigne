// Script pour tester le chargement du logo
// √Ä ex√©cuter dans la console du navigateur

console.log('üñºÔ∏è TEST DU CHARGEMENT DU LOGO');
console.log('=' .repeat(50));

// Fonction pour tester le chargement de l'image
const testerChargementLogo = () => {
  console.log('\nüñºÔ∏è TEST DU CHARGEMENT DU LOGO:');
  
  // Cr√©er une image de test
  const img = new Image();
  
  img.onload = function() {
    console.log('‚úÖ Logo charg√© avec succ√®s !');
    console.log(`üìè Dimensions: ${this.width}x${this.height}`);
    console.log('üîó URL: http://localhost:3000/images/products/logo/logo-koula.jpg');
  };
  
  img.onerror = function() {
    console.log('‚ùå Erreur de chargement du logo');
    console.log('üîç V√©rifiez que le fichier existe dans: client/public/images/products/logo/logo-koula.jpg');
    console.log('üîç V√©rifiez que le serveur React fonctionne sur http://localhost:3000');
  };
  
  // Tester le chargement
  img.src = 'http://localhost:3000/images/products/logo/logo-koula.jpg';
  
  return img;
};

// Fonction pour cr√©er une facture de test avec logo
const creerFactureTestAvecLogo = async () => {
  console.log('\nüìÑ CR√âATION D\'UNE FACTURE DE TEST AVEC LOGO:');
  
  try {
    const { localOrdersAPI } = await import('./client/src/services/localOrdersAPI.js');
    
    const userData = JSON.parse(localStorage.getItem('user'));
    if (!userData) {
      console.log('‚ùå Utilisateur non connect√©');
      return false;
    }
    
    // Cr√©er une commande de test
    const commandeTest = {
      items: [
        {
          product: 'fer-test-logo',
          quantity: 1,
          price: 300000,
          name: 'FER',
          image: 'test-image-1'
        }
      ],
      shippingAddress: {
        firstName: userData.firstName || 'Test',
        lastName: userData.lastName || 'Client',
        street: '123 Rue Test',
        city: 'Conakry',
        phone: userData.phone || '+224 123 456 789'
      },
      paymentMethod: 'mobile_money',
      notes: 'Commande de test pour v√©rifier le logo',
      subtotal: 300000,
      tax: 0,
      total: 300000
    };

    console.log('üì¶ Cr√©ation de la commande de test...');
    const result = await localOrdersAPI.createOrder(commandeTest);
    
    if (result.success) {
      console.log(`‚úÖ Commande cr√©√©e: ${result.data.order.trackingNumber}`);
      
      // Approuver imm√©diatement
      console.log('üîî Approbation de la commande...');
      const approbation = await localOrdersAPI.approveOrder(result.data.order._id, 'Commande approuv√©e - Test logo');
      
      if (approbation.success) {
        console.log('‚úÖ Commande approuv√©e - Testez le t√©l√©chargement de facture!');
        
        // Attendre un peu
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        return result.data.order;
      } else {
        console.error('‚ùå Erreur approbation:', approbation.error);
        return false;
      }
    } else {
      console.error('‚ùå Erreur cr√©ation commande:', result.error);
      return false;
    }
  } catch (error) {
    console.error('‚ùå Erreur:', error);
    return false;
  }
};

// Fonction pour v√©rifier les fichiers
const verifierFichiersLogo = () => {
  console.log('\nüìÅ V√âRIFICATION DES FICHIERS LOGO:');
  
  // V√©rifier si le fichier existe (simulation)
  console.log('üîç Chemin du logo: client/public/images/products/logo/logo-koula.jpg');
  console.log('üîç URL du logo: http://localhost:3000/images/products/logo/logo-koula.jpg');
  console.log('üí° Si l\'image ne s\'affiche pas:');
  console.log('   1. V√©rifiez que le fichier existe dans le dossier public');
  console.log('   2. V√©rifiez que le serveur React fonctionne');
  console.log('   3. Essayez d\'ouvrir directement: http://localhost:3000/images/products/logo/logo-koula.jpg');
  
  return true;
};

// Fonction principale
const testLogoComplet = async () => {
  console.log('üöÄ D√âMARRAGE DU TEST LOGO COMPLET...');
  
  // 1. V√©rifier les fichiers
  console.log('\n' + '='.repeat(60));
  console.log('1Ô∏è‚É£ V√âRIFICATION DES FICHIERS LOGO');
  console.log('='.repeat(60));
  verifierFichiersLogo();
  
  // 2. Tester le chargement du logo
  console.log('\n' + '='.repeat(60));
  console.log('2Ô∏è‚É£ TEST DU CHARGEMENT DU LOGO');
  console.log('='.repeat(60));
  testerChargementLogo();
  
  // 3. Cr√©er une facture de test
  console.log('\n' + '='.repeat(60));
  console.log('3Ô∏è‚É£ CR√âATION D\'UNE FACTURE DE TEST');
  console.log('='.repeat(60));
  const commandeTest = await creerFactureTestAvecLogo();
  
  // 4. R√©sum√© final
  console.log('\n' + '='.repeat(80));
  console.log('üìã R√âSUM√â DU TEST LOGO COMPLET');
  console.log('='.repeat(80));
  
  console.log('üîç R√©sultats:');
  console.log(`- Fichiers v√©rifi√©s: ‚úÖ`);
  console.log(`- Test de chargement: En cours...`);
  console.log(`- Facture de test cr√©√©e: ${commandeTest ? '‚úÖ' : '‚ùå'}`);
  
  console.log('\nüéâ TEST LOGO TERMIN√â!');
  console.log('\nüí° Instructions:');
  console.log('1. Allez sur http://localhost:3000/orders');
  console.log('2. Cliquez sur "T√©l√©charger la facture" pour la commande de test');
  console.log('3. Ouvrez le fichier HTML t√©l√©charg√©');
  console.log('4. V√©rifiez si le logo s\'affiche');
  
  console.log('\nüîß Si le logo ne s\'affiche pas:');
  console.log('- Ouvrez directement: http://localhost:3000/images/products/logo/logo-koula.jpg');
  console.log('- V√©rifiez que le fichier existe dans client/public/images/products/logo/');
  console.log('- Red√©marrez le serveur React si n√©cessaire');
  
  console.log('\n‚úÖ Test du logo termin√©!');
};

// Exporter les fonctions
window.testerChargementLogo = testerChargementLogo;
window.creerFactureTestAvecLogo = creerFactureTestAvecLogo;
window.verifierFichiersLogo = verifierFichiersLogo;
window.testLogoComplet = testLogoComplet;

console.log('üîß Fonctions disponibles:');
console.log('- testerChargementLogo() : Tester le chargement du logo');
console.log('- creerFactureTestAvecLogo() : Cr√©er une facture de test');
console.log('- verifierFichiersLogo() : V√©rifier les fichiers logo');
console.log('- testLogoComplet() : Test logo complet');

// Ex√©cuter automatiquement
testLogoComplet();
